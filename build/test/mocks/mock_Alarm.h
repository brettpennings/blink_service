/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ALARM_H
#define _MOCK_ALARM_H

#include "Alarm.h"

void mock_Alarm_Init(void);
void mock_Alarm_Destroy(void);
void mock_Alarm_Verify(void);




#define Alarm_Init_Ignore() Alarm_Init_CMockIgnore()
void Alarm_Init_CMockIgnore(void);
#define Alarm_Init_Expect(alarm, duration) Alarm_Init_CMockExpect(__LINE__, alarm, duration)
void Alarm_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, Alarm_t* alarm, Clock_Val_t duration);
typedef void (* CMOCK_Alarm_Init_CALLBACK)(Alarm_t* alarm, Clock_Val_t duration, int cmock_num_calls);
void Alarm_Init_StubWithCallback(CMOCK_Alarm_Init_CALLBACK Callback);
#define Alarm_Start_Ignore() Alarm_Start_CMockIgnore()
void Alarm_Start_CMockIgnore(void);
#define Alarm_Start_Expect(alarm) Alarm_Start_CMockExpect(__LINE__, alarm)
void Alarm_Start_CMockExpect(UNITY_LINE_TYPE cmock_line, Alarm_t* alarm);
typedef void (* CMOCK_Alarm_Start_CALLBACK)(Alarm_t* alarm, int cmock_num_calls);
void Alarm_Start_StubWithCallback(CMOCK_Alarm_Start_CALLBACK Callback);
#define Alarm_Reset_Ignore() Alarm_Reset_CMockIgnore()
void Alarm_Reset_CMockIgnore(void);
#define Alarm_Reset_Expect(alarm) Alarm_Reset_CMockExpect(__LINE__, alarm)
void Alarm_Reset_CMockExpect(UNITY_LINE_TYPE cmock_line, Alarm_t* alarm);
typedef void (* CMOCK_Alarm_Reset_CALLBACK)(Alarm_t* alarm, int cmock_num_calls);
void Alarm_Reset_StubWithCallback(CMOCK_Alarm_Reset_CALLBACK Callback);
#define Alarm_IsExpired_IgnoreAndReturn(cmock_retval) Alarm_IsExpired_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Alarm_IsExpired_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define Alarm_IsExpired_ExpectAndReturn(alarm, cmock_retval) Alarm_IsExpired_CMockExpectAndReturn(__LINE__, alarm, cmock_retval)
void Alarm_IsExpired_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Alarm_t* alarm, _Bool cmock_to_return);
typedef _Bool (* CMOCK_Alarm_IsExpired_CALLBACK)(Alarm_t* alarm, int cmock_num_calls);
void Alarm_IsExpired_StubWithCallback(CMOCK_Alarm_IsExpired_CALLBACK Callback);

#endif
